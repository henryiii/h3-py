name: wheels

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  release:

env:
  CIBW_TEST_REQUIRES: pytest numpy
  CIBW_TEST_COMMAND: pytest {project}/tests
  CIBW_SKIP: pp* cp27*-win* *-win32 *-manylinux_i686

jobs:
  make_wheels:
    name: ${{ matrix.os }} ${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
        - os: macos-latest
          arch: "x86_64" # Need better support in scikit-build for universal2
        - os: windows-latest
          arch: auto
        - os: ubuntu-latest
          arch: auto
        - os: ubuntu-latest
          arch: aarch64

    steps:

      - uses: actions/checkout@v2
        with:
          submodules: recursive

      ## Setup Env

      - uses: ilammy/msvc-dev-cmd@v1.9.0
        if: runner.os == 'Windows'

      - name: Set Windows variables
        if: runner.os == 'Windows'
        shell: bash
        run: |
          echo "CC=cl.exe" >> $GITHUB_ENV
          echo "CXX=cl.exe" >> $GITHUB_ENV

      - name: Set up QEMU
        if: runner.os == 'Linux' && matrix.arch != 'auto'
        uses: docker/setup-qemu-action@v1
        with:
          platforms: ${{ matrix.arch }}

      ## Build

      - uses: pypa/cibuildwheel@v1.11.1
        env:
          CIBW_ARCHS: ${{ matrix.arch }}

      - name: Make sdist
        if: runner.os == 'Linux'
        run: |
          pipx run build --sdist --outdir=wheelhouse


      ## Upload

      - name: Check with Twine
        run: |
          pipx run twine check wheelhouse/*

      - name: Upload artifacts to GitHub
        if: github.event_name == 'release'
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: ./wheelhouse

      - name: Release to PyPI
        if: github.event_name == 'release' && github.event.action == 'published'
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.pypi_password }}
        run: |
          pipx run twine upload wheelhouse/*
